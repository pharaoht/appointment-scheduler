{"version":3,"sources":["containers/Home.jsx","actions/types.jsx","actions/auth.jsx","containers/Login.jsx","containers/Signup.jsx","containers/Activate.jsx","containers/ResetPassword.jsx","containers/ResetPasswordConfirm.jsx","components/NavBar.jsx","hocs/Layout.jsx","reducers/auth.jsx","reducers/index.jsx","store.jsx","App.js","index.js"],"names":["Home","to","LOGIN_SUCCESS","LOGIN_FAIL","LOAD_USER_SUCCESS","LOAD_USER_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","LOGOUT","load_user","dispatch","a","localStorage","getItem","config","headers","axios","get","res","type","payload","data","connect","state","isAuthenticated","login","email","password","body","JSON","stringify","post","useState","formData","setFormData","onChange","e","target","name","value","console","log","className","onSubmit","preventDefault","placeholder","required","minLength","Signup","Activate","ResetPassword","ResetPasswordConfirm","Navbar","checkAuthenticated","token","code","props","useEffect","children","initialState","access","refresh","user","combineReducers","auth","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","Login","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b83fb929.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Home = () => (\r\n    <div>\r\n        <p>Home Page</p>\r\n        <p>Click here to login</p>\r\n        <Link to=\"/login\">Login</Link>\r\n    </div>\r\n)\r\n\r\nexport default Home;","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\r\nexport const LOAD_USER_FAIL = 'LOAD_USER_FAIL';\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\r\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\r\nexport const LOGOUT = 'LOGOUT';","import axios from 'axios';\r\n\r\nimport {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOAD_USER_SUCCESS,\r\n    LOAD_USER_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    LOGOUT,\r\n} from './types'\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        };\r\n\r\n        const body = JSON.stringify({ token: localStorage.getItem('access') });\r\n\r\n        try {\r\n            const res = await axios.post('http://localhost:8000/auth/jwt/verify', body, config)\r\n\r\n            if (res.data.code !== 'token_not_valid') {\r\n                dispatch({\r\n                    type: AUTHENTICATED_SUCCESS\r\n                })\r\n            } else {\r\n                dispatch({\r\n                    type: AUTHENTICATED_FAIL\r\n                })\r\n            }\r\n        } catch (err) {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL\r\n            })\r\n        }\r\n\r\n    } else {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        }\r\n\r\n        try {\r\n            const res = await axios.get(`http://localhost:8000/auth/users/me/`, config)\r\n\r\n            dispatch({\r\n                type: LOAD_USER_SUCCESS,\r\n                payload: res.data\r\n            })\r\n        } catch (err) {\r\n            dispatch({\r\n                type: LOAD_USER_FAIL\r\n            })\r\n        }\r\n    }\r\n    else {\r\n        dispatch({\r\n            type: LOAD_USER_FAIL\r\n        })\r\n    }\r\n\r\n};\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post(`http://localhost:8000/auth/jwt/create/`, body, config)\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(load_user())\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        })\r\n    }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: LOGOUT,\r\n    })\r\n}","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport { login } from '../actions/auth';\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        login(email, password)\r\n    }\r\n\r\n    if (isAuthenticated) {\r\n        console.log(\"hi\")\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='container mt-5'>\r\n                <h1>Sign In</h1>\r\n                <p>Sign into your account</p>\r\n                <form onSubmit={e => onSubmit(e)}>\r\n                    <div className='form-group'>\r\n                        <input\r\n                            className='form-control'\r\n                            type='email'\r\n                            placeholder='email'\r\n                            name='email'\r\n                            value={email}\r\n                            onChange={e => onChange(e)}\r\n                            required\r\n\r\n                        />\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <input\r\n                            className='form-control'\r\n                            type='password'\r\n                            placeholder='password'\r\n                            name='password'\r\n                            value={password}\r\n                            onChange={e => onChange(e)}\r\n                            minLength='6'\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <button className='btn btn-primary' type='submit'>Login</button>\r\n                </form>\r\n                <p>Don't have an account? <Link to='/signup'>Sign up</Link></p>\r\n                <p>Forgot your password <Link to='/rest-password'>Reset Password</Link></p>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n\r\n//ctrl + D ","import React from 'react'\r\n\r\n\r\nconst Signup = () => (\r\n    <div>\r\n        Signup\r\n    </div>\r\n)\r\n\r\nexport default Signup;","import React from 'react'\r\n\r\n\r\nconst Activate = () => (\r\n    <div>\r\n        Activate\r\n    </div>\r\n)\r\n\r\nexport default Activate;","import React from 'react'\r\n\r\n\r\nconst ResetPassword = () => (\r\n    <div>\r\n        ResetPassword\r\n    </div>\r\n)\r\n\r\nexport default ResetPassword;","import React from 'react'\r\n\r\n\r\nconst ResetPasswordConfirm = () => (\r\n    <div>\r\n        ResetPasswordConfirm\r\n    </div>\r\n)\r\n\r\nexport default ResetPasswordConfirm;","import React from 'react'\r\n\r\n\r\nconst Navbar = () => (\r\n    <div>\r\n        Navbar\r\n    </div>\r\n)\r\n\r\nexport default Navbar;","import React, { useEffect } from 'react'\r\nimport Navbar from '../components/NavBar';\r\nimport { connect } from 'react-redux'\r\nimport { checkAuthenticated, load_user } from '../actions/auth';\r\n\r\nconst Layout = (props) => {\r\n    useEffect(() => {\r\n        props.checkAuthenticated();\r\n        props.load_user();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            {props.children}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default connect(null, { checkAuthenticated, load_user })(Layout);","import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOAD_USER_SUCCESS,\r\n    LOAD_USER_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    LOGOUT,\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    isAuthenticated: null,\r\n    user: null,\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action\r\n\r\n    switch (type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('access', payload.access)\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh,\r\n            }\r\n        case LOAD_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case LOAD_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n            localStorage.removeItem('access')\r\n            localStorage.removeItem('refresh')\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user: null,\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport auth from './auth'\r\n\r\nexport default combineReducers({\r\n    auth\r\n})","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store","import React from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\n\r\nimport Home from './containers/Home'\r\nimport Login from './containers/Login'\r\nimport Signup from './containers/Signup'\r\nimport Activate from './containers/Activate'\r\nimport ResetPassword from './containers/ResetPassword'\r\nimport ResetPasswordConfirm from './containers/ResetPasswordConfirm'\r\nimport Layout from './hocs/Layout';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nconst App = () => (\r\n    <Provider store={store}>\r\n        <Router>\r\n            <Layout>\r\n                <Switch>\r\n                    <Route exact path='/' component={Home}/>\r\n                    <Route exact path='/login' component={Login}/>\r\n                    <Route exact path='/signup' component={Signup}/>\r\n                    <Route exact path='/rest_password' component={ResetPassword}/>\r\n                    <Route exact path='/password/reset/confirm/:uid/:token' component={ResetPasswordConfirm}/>\r\n                    <Route exact path='/activate/:uid/:token' component={Activate}/>\r\n                    \r\n                </Switch>\r\n            </Layout>\r\n        </Router>\r\n    </Provider>\r\n);\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}