{"version":3,"sources":["containers/Home.jsx","actions/types.jsx","containers/Login.jsx","actions/auth.jsx","containers/Signup.jsx","containers/Activate.jsx","containers/ResetPassword.jsx","containers/ResetPasswordConfirm.jsx","components/NavBar.jsx","hocs/Layout.jsx","reducers/auth.jsx","reducers/index.jsx","store.jsx","App.js","index.js"],"names":["Home","LOGIN_SUCCESS","LOGIN_FAIL","LOAD_USER_SUCCESS","LOAD_USER_FAIL","connect","login","email","password","dispatch","a","config","headers","body","JSON","stringify","axios","post","res","type","payload","data","localStorage","getItem","get","useState","formData","setFormData","onChange","e","target","name","value","className","onSubmit","preventDefault","placeholder","required","minLength","to","Signup","Activate","ResetPassword","ResetPasswordConfirm","Navbar","Layout","props","children","initialState","access","refresh","isAuthenticated","user","combineReducers","auth","state","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","Login","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0885d4e4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Home = () => (\r\n    <div>\r\n        Home\r\n    </div>\r\n)\r\n\r\nexport default Home;","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS'\r\nexport const LOAD_USER_FAIL = 'LOAD_USER_FAIL'","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport { login } from '../actions/auth';\r\n\r\nconst Login = ({ login }) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        login(email, password)\r\n    }\r\n\r\n    //Is the user authenticated\r\n    //Redirect them to the home page\r\n\r\n    return (\r\n        <>\r\n            <div className='container mt-5'>\r\n                <h1>Sign In</h1>\r\n                <p>Sign into your account</p>\r\n                <form onSubmit={e => onSubmit(e)}>\r\n                    <div className='form-group'>\r\n                        <input\r\n                            className='form-control'\r\n                            type='email'\r\n                            placeholder='email'\r\n                            name='email'\r\n                            value={email}\r\n                            onChange={e => onChange(e)}\r\n                            required\r\n\r\n                        />\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <input\r\n                            className='form-control'\r\n                            type='password'\r\n                            placeholder='password'\r\n                            name='password'\r\n                            value={password}\r\n                            onChange={e => onChange(e)}\r\n                            minLength='6'\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <button className='btn btn-primary' type='submit'>Login</button>\r\n                </form>\r\n                <p>Don't have an account? <Link to='/signup'>Sign up</Link></p>\r\n                <p>Forgot your password <Link to='/rest-password'>Reset Password</Link></p>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    //isauthenticated\r\n})\r\n\r\nexport default connect(null, { login })(Login);\r\n\r\n//ctrl + D ","import axios from 'axios';\r\n\r\nimport {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOAD_USER_SUCCESS,\r\n    LOAD_USER_FAIL,\r\n} from './types'\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        }\r\n\r\n        try {\r\n            const res = await axios.get(`http://localhost:8000/auth/users/me/`, config)\r\n\r\n            dispatch({\r\n                type: LOAD_USER_SUCCESS,\r\n                payload: res.data\r\n            })\r\n        } catch (err) {\r\n            dispatch({\r\n                type: LOAD_USER_FAIL\r\n            })\r\n        }\r\n    }\r\n    else {\r\n        dispatch({\r\n            type: LOAD_USER_FAIL\r\n        })\r\n    }\r\n\r\n};\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post(`http://localhost:8000/auth/jwt/create/`, body, config)\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(load_user())\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        })\r\n    }\r\n};\r\n","import React from 'react'\r\n\r\n\r\nconst Signup = () => (\r\n    <div>\r\n        Signup\r\n    </div>\r\n)\r\n\r\nexport default Signup;","import React from 'react'\r\n\r\n\r\nconst Activate = () => (\r\n    <div>\r\n        Activate\r\n    </div>\r\n)\r\n\r\nexport default Activate;","import React from 'react'\r\n\r\n\r\nconst ResetPassword = () => (\r\n    <div>\r\n        ResetPassword\r\n    </div>\r\n)\r\n\r\nexport default ResetPassword;","import React from 'react'\r\n\r\n\r\nconst ResetPasswordConfirm = () => (\r\n    <div>\r\n        ResetPasswordConfirm\r\n    </div>\r\n)\r\n\r\nexport default ResetPasswordConfirm;","import React from 'react'\r\n\r\n\r\nconst Navbar = () => (\r\n    <div>\r\n        Navbar\r\n    </div>\r\n)\r\n\r\nexport default Navbar;","import React from 'react'\r\nimport Navbar from '../components/NavBar';\r\n\r\nconst Layout = (props) => (\r\n    <div>\r\n        <Navbar/>\r\n        {props.children}\r\n    </div>\r\n)\r\n\r\nexport default Layout;","import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOAD_USER_SUCCESS,\r\n    LOAD_USER_FAIL,\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    isAuthenticated: null,\r\n    user: null,\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    const {type, payload} = action\r\n\r\n    switch(type) {\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('access', payload.access)\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                access:payload.access,\r\n                refresh:payload.refresh,\r\n            }\r\n        case LOAD_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user:payload\r\n            }\r\n        case LOAD_USER_FAIL:\r\n            return{\r\n                ...state,\r\n                user: null\r\n            }\r\n        case LOGIN_FAIL:\r\n            localStorage.removeItem('access')\r\n            localStorage.removeItem('refresh')\r\n            return {\r\n                ...state,\r\n                access:null,\r\n                refresh:null,\r\n                isAuthenticated:false,\r\n                user:null,\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport auth from './auth'\r\n\r\nexport default combineReducers({\r\n    auth\r\n})","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store","import React from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\n\r\nimport Home from './containers/Home'\r\nimport Login from './containers/Login'\r\nimport Signup from './containers/Signup'\r\nimport Activate from './containers/Activate'\r\nimport ResetPassword from './containers/ResetPassword'\r\nimport ResetPasswordConfirm from './containers/ResetPasswordConfirm'\r\nimport Layout from './hocs/Layout';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nconst App = () => (\r\n    <Provider store={store}>\r\n        <Router>\r\n            <Layout>\r\n                <Switch>\r\n                    <Route exact path='/' component={Home}/>\r\n                    <Route exact path='/login' component={Login}/>\r\n                    <Route exact path='/signup' component={Signup}/>\r\n                    <Route exact path='/rest_password' component={ResetPassword}/>\r\n                    <Route exact path='/password/reset/confirm/:uid/:token' component={ResetPasswordConfirm}/>\r\n                    <Route exact path='/activate/:uid/:token' component={Activate}/>\r\n                    \r\n                </Switch>\r\n            </Layout>\r\n        </Router>\r\n    </Provider>\r\n);\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}